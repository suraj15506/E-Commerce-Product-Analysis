Create database if not exists myntra;
Use myntra;
Select * from myntra.products;
-- Basic

-- List all unique product categories in the dataset.
SELECT DISTINCT
    (product_category)
FROM
    products;
-- Show the number of products in each product category.
SELECT 
    product_category, COUNT(*) AS product_count
FROM
    products
GROUP BY product_category;

-- What is the average rating for each brand?
SELECT 
    brand_name, AVG(rating)
FROM
    products
GROUP BY brand_name;

-- Retrieve all products with a rating greater than 4.0.
SELECT 
    *
FROM
    products
WHERE
    rating >= 4.0;
    
-- Show products with a discount greater than 50%.
SELECT 
    product_name, discount
FROM
    products
WHERE
    discount > 50;
    
-- Intermediate

-- 6. List top 5 brands with the highest number of products.
SELECT 
    brand_name, COUNT(*)
FROM
    products
GROUP BY brand_name
ORDER BY COUNT(*) DESC
LIMIT 5;

-- 7. What is the total revenue generated by each brand?

SELECT 
    brand_name, sum(Revenue) as total_revnue
FROM
    products
GROUP BY brand_name
ORDER BY total_revnue DESC
LIMIT 5;

-- 8. What is the average discount percentage by product category?
 
SELECT 
    product_category, AVG(discounted_price)
FROM
    products
GROUP BY product_category;

-- 9. Find the product with the highest revenue.
SELECT 
    product_name, reve nue
FROM
    products
ORDER BY revenue DESC
LIMIT 1;

-- 10. List products where the discounted price is less than â‚¹500.

SELECT 
    product_name, discounted_price
FROM
    products
WHERE
    discounted_price > 500;

-- Aggregations

-- 11. What is the total number of ratings received by each category?

SELECT 
    product_category, sum(rating) total_rating
FROM
    products
GROUP BY product_category;

-- 12. Which brand has the highest average rating_count per product?

SELECT 
    brand_name, AVG(rating)
FROM
    products
GROUP BY brand_name
ORDER BY AVG(rating) DESC
LIMIT 1;

-- 13. Show average marked price and discounted price per category.

SELECT 
    product_category, AVG(marked_price), AVG(discounted_price)
FROM
    products
GROUP BY product_category;

-- 14. Find the top 5 highest discounted products (in %).

SELECT 
    product_name, discount AS 'discount%'
FROM
    products
ORDER BY discount DESC
LIMIT 5;

-- 15. What is the total revenue from products with rating above 4.2?
SELECT 
    SUM(revenue)
FROM
    products
WHERE
    rating > 4.2;
    
-- Advanced (CTE, Ranking, Windows)

-- 16. Use a CTE to find top 3 products by revenue in each category.

With 
revnue_category as ( Select *,rank()  over(partition by product_category order by revenue desc) as r from products)
select * from revnue_category where r<=3;

-- 17. Rank products within each brand based on revenue.
Select * , rank() 
over(partition by brand_name  order by revenue desc) 
as 'rank' from products;

-- 18. Calculate cumulative revenue per category.

Select product_category,Product_name, revenue, sum(revenue) 
over (partition by product_category order by revenue desc) 
as cumulative_revnue from products;

-- 19. Which category has the highest average discount percent?

SELECT 
    product_category, AVG(discount)
FROM
    products
GROUP BY product_category
ORDER BY AVG(discount) DESC
LIMIT 1;

-- 20. What is the average rating for top 3 most selling products by rating_count?
Select avg(rating) from (
Select * from products order by rating_count desc limit 3) as t ;

-- Business insights
-- 21. Identify brands that have an average rating below 3.5.
SELECT 
    brand_name, AVG(rating)
FROM
    products
GROUP BY brand_name
HAVING AVG(rating) > 3.5;

-- 22. Determine the top 3 categories contributing the most to total revenue.

SELECT 
    product_category, SUM(revenue)
FROM
    products
GROUP BY product_category
ORDER BY SUM(revenue) DESC
LIMIT 3;

-- 23. List brands where more than 75% of products have a discount above 40%.

Select brand_name from products group by brand_name having sum(case  when discount >40 then 1 else 0 end)  *1.0/ count(*)>0.75;

-- 24. Which category has the most expensive product (marked price)?
SELECT 
    product_category, AVG(revenue)
FROM
    products
GROUP BY product_category
ORDER BY AVG(revenue) DESC
LIMIT 1;

-- 25. Calculate revenue per rating point for each product (i.e., revenue/rating_count).

Select product_name, (revenue/rating_count) as revnue_per_rating from products; 


